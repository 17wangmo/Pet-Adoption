"use strict";(()=>{var e={};e.id=2,e.ids=[2],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},78667:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>f,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{POST:()=>d});var a=t(49303),o=t(88716),n=t(60670),i=t(87070);t(98691);var u=t(16385),p=t(6590);async function d(e){try{let{name:r,email:t,password:s}=await e.json();if(!r||!t||!s)return i.NextResponse.json({error:"Please provide all required fields"},{status:400});if(await (0,u.Z)(),await p.Z.findOne({email:t}))return i.NextResponse.json({error:"User with this email already exists"},{status:400});let a=await p.Z.create({name:r,email:t,password:s});return i.NextResponse.json({message:"User registered successfully",userId:a._id},{status:201})}catch(e){return console.error("Registration error:",e),i.NextResponse.json({error:"An error occurred during registration"},{status:500})}}let l=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"C:\\Users\\tsher\\OneDrive\\Desktop\\CTE204\\pet adoption - Copy\\src\\app\\api\\auth\\register\\route.js",nextConfigOutput:"",userland:s}),{requestAsyncStorage:c,staticGenerationAsyncStorage:m,serverHooks:h}=l,g="/api/auth/register/route";function f(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},16385:(e,r,t)=>{t.d(r,{Z:()=>i});var s=t(11185),a=t.n(s);let o=process.env.MONGODB_URI;if(!o)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let n=global.mongoose;n||(n=global.mongoose={conn:null,promise:null});let i=async function(){if(n.conn)return n.conn;n.promise||(n.promise=a().connect(o,{bufferCommands:!1}).then(e=>e));try{n.conn=await n.promise}catch(e){throw n.promise=null,e}return n.conn}},6590:(e,r,t)=>{t.d(r,{Z:()=>i});var s=t(11185),a=t.n(s),o=t(98691);let n=new(a()).Schema({name:{type:String,required:[!0,"Please provide your name"],trim:!0},email:{type:String,required:[!0,"Please provide your email"],unique:!0,trim:!0,lowercase:!0,match:[/^\S+@\S+\.\S+$/,"Please provide a valid email"]},password:{type:String,required:[!0,"Please provide a password"],minlength:[6,"Password must be at least 6 characters long"]},role:{type:String,enum:["user","admin"],default:"user"},phone:{type:String,required:!1},createdAt:{type:Date,default:Date.now}});n.pre("save",async function(e){if(!this.isModified("password"))return e();try{let r=await o.ZP.genSalt(10);this.password=await o.ZP.hash(this.password,r),e()}catch(r){e(r)}}),n.methods.comparePassword=async function(e){return o.ZP.compare(e,this.password)},n.set("toJSON",{transform:function(e,r){return delete r.password,r}});let i=a().models.User||a().model("User",n)}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[276,972,691],()=>t(78667));module.exports=s})();