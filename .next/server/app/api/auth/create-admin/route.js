"use strict";(()=>{var e={};e.id=922,e.ids=[922],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},1922:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>f,patchFetch:()=>v,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m});var a={};t.r(a),t.d(a,{POST:()=>p});var s=t(49303),n=t(88716),o=t(60670),i=t(87070);t(98691);var u=t(16385),d=t(6590);async function p(e){try{let{name:r,email:t,password:a}=await e.json();if(!r||!t||!a)return i.NextResponse.json({error:"Please provide all required fields"},{status:400});if(await (0,u.Z)(),await d.Z.findOne({email:t}))return i.NextResponse.json({error:"User with this email already exists"},{status:400});let s=await d.Z.create({name:r,email:t,password:a,role:"admin"});return i.NextResponse.json({message:"Admin user created successfully",userId:s._id},{status:201})}catch(e){return console.error("Admin creation error:",e),i.NextResponse.json({error:"An error occurred during admin creation"},{status:500})}}let l=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/auth/create-admin/route",pathname:"/api/auth/create-admin",filename:"route",bundlePath:"app/api/auth/create-admin/route"},resolvedPagePath:"C:\\Users\\tsher\\OneDrive\\Desktop\\CTE204\\pet adoption - Copy\\src\\app\\api\\auth\\create-admin\\route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:m,serverHooks:h}=l,f="/api/auth/create-admin/route";function v(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},16385:(e,r,t)=>{t.d(r,{Z:()=>i});var a=t(11185),s=t.n(a);let n=process.env.MONGODB_URI;if(!n)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let o=global.mongoose;o||(o=global.mongoose={conn:null,promise:null});let i=async function(){if(o.conn)return o.conn;o.promise||(o.promise=s().connect(n,{bufferCommands:!1}).then(e=>e));try{o.conn=await o.promise}catch(e){throw o.promise=null,e}return o.conn}},6590:(e,r,t)=>{t.d(r,{Z:()=>i});var a=t(11185),s=t.n(a),n=t(98691);let o=new(s()).Schema({name:{type:String,required:[!0,"Please provide your name"],trim:!0},email:{type:String,required:[!0,"Please provide your email"],unique:!0,trim:!0,lowercase:!0,match:[/^\S+@\S+\.\S+$/,"Please provide a valid email"]},password:{type:String,required:[!0,"Please provide a password"],minlength:[6,"Password must be at least 6 characters long"]},role:{type:String,enum:["user","admin"],default:"user"},phone:{type:String,required:!1},createdAt:{type:Date,default:Date.now}});o.pre("save",async function(e){if(!this.isModified("password"))return e();try{let r=await n.ZP.genSalt(10);this.password=await n.ZP.hash(this.password,r),e()}catch(r){e(r)}}),o.methods.comparePassword=async function(e){return n.ZP.compare(e,this.password)},o.set("toJSON",{transform:function(e,r){return delete r.password,r}});let i=s().models.User||s().model("User",o)}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[276,972,691],()=>t(1922));module.exports=a})();